name: CI-CD

on:
  push:
    branches: ['desafios-imersao']

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        uses: docker/build-push-action@v5.0.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: ./kube-news/src
          # Path to the Dockerfile
          file: ./kube-news/src/Dockerfile
          # List of metadata for an image
          labels: |
            org.opencontainers.image.authors=roberto0arruda@hotmail.com
          # Push is a shorthand for --output=type=registry
          push: true
          # List of tags
          tags: |
            roberto0arruda/kube-news:${{ github.run_number }}
            roberto0arruda/kube-news:latest
          # Sets the target stage to build
          target: # optional

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
      - name: Configure AWS Credentials
        # You may pin to the exact commit or the version.
        # uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # AWS Region, e.g. us-east-2
          aws-region: us-east-1
          # AWS Access Key ID. Provide this key if you want to assume a role using access keys rather than a web identity token.
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # AWS Secret Access Key. Required if aws-access-key-id is provided.
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: configurar o kubeconfig
        run: echo "configurar o kubeconfig"
      - name: aplicar o deploy
        run: echo "executa kubectl apply"
